(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/piyush/Downloads/web2py/applications/u_tunes2/controllers/default.py'
p4
sS'code'
p5
S'# -*- coding: utf-8 -*- \n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################  \n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    response.flash = T(\'Welcome to web2py\')\n    return dict(message=T(\'Hello World\'))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login \n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    session.forget()\n    return service()\n\ndef upload_box():\n    form=SQLFORM(db.songs_database)\n    if form.accepts(request.vars,session):\n        response.flash=\'NEW Song uploaded\'\n    return dict(form=form)\n\ndef search_box():\n    form=FORM(TABLE(#TR(\'Search by\',INPUT(_type=\'string\',_name=\'Search_by\',requires=[IS_NOT_EMPTY(),IS_IN_SET([\'artist\',\'genre\',\'song\'])]))\n                    TR(\'Find\',INPUT(_type=\'string\',_name=\'Find\',requires=IS_NOT_EMPTY())),TR(\'\',INPUT(_type=\'submit\',_value=\'SEARcH\')))) \n    if form.accepts(request.vars,session):\n         s=\'\'\n         p=request.vars.Find\n         for i in range(0,len(request.vars.Find)):\n               if(p[i]!=\' \' | s==\'\'):\n                if(p[i]!=\' \'): \n                 s=s+p[i]\n               else: \n                r=db((s==db.songs_database.song_name) | (s==db.songs_database.artist) | (s==db.songs_database.Genre)).select()\n                if len(r)==0:\n                    response.flash=\'Couldn\\\'t find sorry\'\n                else: \n                    response.flash=\'search complete\'\n                    return dict(r=r[0].song_name)\n    return dict(form=form)\n\nresponse._vars=response._caller(search_box)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/piyush/Downloads/web2py/gluon/restricted.py", line 178, in restricted\n    exec ccode in environment\n  File "/home/piyush/Downloads/web2py/applications/u_tunes2/controllers/default.py", line 80, in <module>\n  File "/home/piyush/Downloads/web2py/gluon/globals.py", line 96, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/piyush/Downloads/web2py/applications/u_tunes2/controllers/default.py", line 68, in search_box\n    if(p[i]!=\' \' | s==\'\'):\nTypeError: unsupported operand type(s) for |: \'str\' and \'str\'\n'
p8
s.